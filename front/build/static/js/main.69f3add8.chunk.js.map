{"version":3,"sources":["components/home.js","components/eventList.js","components/event.js","components/register.js","components/createEvent.js","components/eventEdit.js","App.js","serviceWorker.js","index.js"],"names":["Home","props","state","username","password","redirect","onUsernameChange","bind","onPasswordChange","handleLogin","localStorage","clear","e","this","setState","target","value","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","json","data","console","log","success","setItem","token","to","Row","Col","className","style","padding","Form","Group","controlId","Label","Control","type","placeholder","onChange","Button","variant","onClick","Component","EventList","events","handleDelete","getItem","id","filter","t","xs","marginBottom","marginLeft","href","Table","bordered","hover","scope","map","i","key","event_name","event_category","event_place","event_address","event_type","toString","pathname","Event","event","match","params","Card","width","Img","src","thumbnail","Body","Title","Text","event_initial_date","event_final_date","marginRight","React","Register","first","last","email","onFirstChange","onLastChange","onEmailChange","handleSubmit","user","ok","as","CreateEvent","event_creator","onNameChange","onCategoryChange","onPlaceChange","onAddressChange","onIDateChange","onFDateChange","onVirtualChange","onThumbChange","handleCrate","red","defaultValue","Check","label","eventEdit","defaultChecked","App","textAlign","path","exact","component","EventEdit","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.69f3add8.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport { Form, Button, Col, Row } from 'react-bootstrap'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default class Home extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            redirect: null\r\n        }\r\n\r\n        this.onUsernameChange = this.onUsernameChange.bind(this)\r\n        this.onPasswordChange = this.onPasswordChange.bind(this)\r\n        this.handleLogin = this.handleLogin.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        localStorage.clear(\"token\")\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n\r\n    onPasswordChange(e) {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n\r\n    handleLogin(e) {\r\n        e.preventDefault();\r\n        fetch(\"http://localhost:8080/users/api-auth\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                username: this.state.username,\r\n                password: this.state.password\r\n            })\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data=>{\r\n            console.log(data)\r\n            if (data.success) {\r\n                localStorage.setItem(\"token\",data.token)\r\n                this.setState({ redirect: true })\r\n            }\r\n        })\r\n    }\r\n\r\n    redirect() {\r\n        if(this.state.redirect){\r\n            return <Redirect to=\"/events\"/>\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.redirect()}\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col>\r\n                        <div className=\"border rounded\" style={{ padding: \"10px\" }}>\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter username\" onChange={this.onUsernameChange} />\r\n                                </Form.Group>\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.onPasswordChange} />\r\n                                </Form.Group>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button variant=\"primary\" type=\"button\" onClick={this.handleLogin} >\r\n                                            Login\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to=\"register\" >\r\n                                            Register\r\n                                        </Link>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Row, Col, Table, Button } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default class EventList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            events: []\r\n        }\r\n\r\n        this.handleDelete = this.handleDelete.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:8080/events/', {\r\n            method: 'GET',\r\n            headers: {\r\n                'authorization': localStorage.getItem(\"token\"),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            this.setState({ events: data })\r\n        })\r\n    }\r\n\r\n    handleDelete(id) {\r\n\r\n        fetch(\"http://localhost:8080/events/\"+id, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'authorization': localStorage.getItem(\"token\"),\r\n            }\r\n        }).then(res => {\r\n\r\n        })\r\n\r\n        const events = this.state.events.filter(t => t.id !== id)\r\n        this.setState({ events })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col xs={1}></Col>\r\n                    <Col>\r\n                        <Row style={{marginBottom: \"10px\"}}>\r\n                            <h2 >Your event list</h2>\r\n                            <Button style={{marginLeft: \"10px\"}} href=\"/events/create\">New event +</Button>\r\n                        </Row>\r\n                        \r\n                        \r\n                        <Table className=\"table\" bordered hover>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Id</th>\r\n                                    <th scope=\"col\">Nombre</th>\r\n                                    <th scope=\"col\">Categoría</th>\r\n                                    <th scope=\"col\">Lugar</th>\r\n                                    <th scope=\"col\">Direccion</th>\r\n                                    <th scope=\"col\">Virtual</th>\r\n                                    <th scope=\"col\">Options</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.events.map((e, i) => (\r\n\r\n                                    <tr key={i}>\r\n                                        <td>{e.id}</td>\r\n                                        <td>{e.event_name}</td>\r\n                                        <td>{e.event_category}</td>\r\n                                        <td>{e.event_place}</td>\r\n                                        <td>{e.event_address}</td>\r\n                                        <td>{e.event_type.toString()}</td>\r\n                                        <td><Link to={{ pathname: '/events/detail/' + e.id }}>Details</Link> / <Link to={{ pathname: '/events/' }} onClick={() => this.handleDelete(e.id)}>Delete</Link></td>\r\n\r\n                                    </tr>\r\n\r\n                                ))}\r\n                            </tbody>\r\n                        </Table>\r\n                    </Col>\r\n                    <Col xs={1}></Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { Row, Col, Card, Button } from 'react-bootstrap'\r\n\r\nexport default class Event extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            event: {\r\n                id: 1,\r\n                event_type: \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:8080/events/' + this.props.match.params.id, {\r\n            method: 'GET',\r\n            headers: {\r\n                'authorization': localStorage.getItem(\"token\"),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n            console.log(data)\r\n            this.setState({ event: data })\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col>\r\n                        <Card style={{ width: '25rem', marginBottom: \"20px\" }}>\r\n                            <Card.Img variant=\"top\" src={this.state.event.thumbnail} />\r\n                            <Card.Body>\r\n                            <Card.Title>{this.state.event.event_name}</Card.Title>\r\n                                <Card.Text>\r\n                                    Category: {this.state.event.event_category}<br/>\r\n                                    Place: {this.state.event.event_place}<br/>\r\n                                    Address: {this.state.event.event_address}<br/>\r\n                                    Start date: {this.state.event.event_initial_date}<br/>\r\n                                    End date: {this.state.event.event_final_date}<br/>\r\n                                    Virtual: {this.state.event.event_type.toString()}<br/>\r\n                                </Card.Text>\r\n                                <Button style={{ marginRight: \"10px\" }} href={\"/events/edit/\"+this.state.event.id} variant=\"primary\">Edit</Button>\r\n                                <Button href=\"/events\" variant=\"danger\">Back</Button>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport { Form, Col, Button, Row } from 'react-bootstrap'\r\nimport { Redirect, Link } from 'react-router-dom'\r\n\r\nexport default class Register extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: \"\",\r\n            first: \"\",\r\n            last: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            redirect: false\r\n        }\r\n\r\n        this.onUsernameChange = this.onUsernameChange.bind(this)\r\n        this.onFirstChange = this.onFirstChange.bind(this)\r\n        this.onLastChange = this.onLastChange.bind(this)\r\n        this.onEmailChange = this.onEmailChange.bind(this)\r\n        this.onPasswordChange = this.onPasswordChange.bind(this)\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n\r\n    }\r\n\r\n    onUsernameChange(e) {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n\r\n    onFirstChange(e) {\r\n        this.setState({ first: e.target.value })\r\n    }\r\n\r\n    onLastChange(e) {\r\n        this.setState({ last: e.target.value })\r\n    }\r\n\r\n    onEmailChange(e) {\r\n        this.setState({ email: e.target.value })\r\n    }\r\n\r\n    onPasswordChange(e) {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n\r\n        let user = {\r\n            \"username\": this.state.username,\r\n            \"first_name\": this.state.first,\r\n            \"last_name\": this.state.last,\r\n            \"email\": this.state.email,\r\n            \"password\": this.state.password\r\n        }\r\n\r\n        fetch(\"http://localhost:8080/users\", {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(user)\r\n        }).then(res => {\r\n            if (res.ok) {\r\n                this.setState({ redirect: true })\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    redirect() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/\" />\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.redirect()}\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={6}>\r\n                        <div className=\"border rounded\" style={{ padding: \"10px\" }}>\r\n                            <Form id=\"form-login\">\r\n                                <Form.Group controlId=\"formGridUsername\">\r\n                                    <Form.Label>Username</Form.Label>\r\n                                    <Form.Control type=\"text\" placeholder=\"Enter username\" onChange={this.onUsernameChange} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Row>\r\n                                    <Form.Group as={Col} controlId=\"formGridName\">\r\n                                        <Form.Label>First Name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Enter first name\" onChange={this.onFirstChange} />\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group as={Col} controlId=\"formGridLast\">\r\n                                        <Form.Label>Last Name</Form.Label>\r\n                                        <Form.Control type=\"text\" placeholder=\"Enter last name\" onChange={this.onLastChange} />\r\n                                    </Form.Group>\r\n\r\n                                </Form.Row>\r\n\r\n                                <Form.Group controlId=\"formGridEmail\">\r\n                                    <Form.Label>Email</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={this.onEmailChange} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formGridPassword\">\r\n                                    <Form.Label>Password</Form.Label>\r\n                                    <Form.Control type=\"password\" placeholder=\"Password\" onChange={this.onPasswordChange} />\r\n                                </Form.Group>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <Button variant=\"primary\" type=\"button\" onClick={this.handleSubmit}>\r\n                                            Submit\r\n                                        </Button>\r\n                                    </Col>\r\n                                    <Col>\r\n                                        <Link to=\"/\">Back to home</Link>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Form>\r\n                        </div>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Form, Col, Button, Row } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router'\r\n\r\nexport default class CreateEvent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n\r\n            event_name: \"\",\r\n            event_category: \"\",\r\n            event_place: \"\",\r\n            event_address: \"\",\r\n            event_initial_date: \"\",\r\n            event_final_date: \"\",\r\n            event_type: true,\r\n            thumbnail: null,\r\n            event_creator: 1\r\n\r\n        }\r\n        this.onNameChange = this.onNameChange.bind(this)\r\n        this.onCategoryChange = this.onCategoryChange.bind(this)\r\n        this.onPlaceChange = this.onPlaceChange.bind(this)\r\n        this.onAddressChange = this.onAddressChange.bind(this)\r\n        this.onIDateChange = this.onIDateChange.bind(this)\r\n        this.onFDateChange = this.onFDateChange.bind(this)\r\n        this.onVirtualChange = this.onVirtualChange.bind(this)\r\n        this.onThumbChange = this.onThumbChange.bind(this)\r\n        this.handleCrate = this.handleCrate.bind(this)\r\n    }\r\n\r\n    onNameChange(e) {\r\n        this.setState({ event_name: e.target.value })\r\n    }\r\n\r\n    onCategoryChange(e) {\r\n        this.setState({ event_category: e.target.value })\r\n    }\r\n\r\n    onPlaceChange(e) {\r\n        this.setState({ event_place: e.target.value })\r\n    }\r\n\r\n    onAddressChange(e) {\r\n        this.setState({ event_address: e.target.value })\r\n    }\r\n\r\n    onIDateChange(e) {\r\n        this.setState({ event_initial_date: e.target.value })\r\n    }\r\n\r\n    onFDateChange(e) {\r\n        this.setState({ event_final_date: e.target.value })\r\n    }\r\n\r\n    onVirtualChange(e) {\r\n        if (e.target.value === \"on\") {\r\n            this.setState({ event_type: true })\r\n        }\r\n        else {\r\n            this.setState({ event_type: false })\r\n        }\r\n\r\n    }\r\n\r\n    onThumbChange(e) {\r\n        if (e.target.value !== \"\") {\r\n            this.setState({ thumbnail: e.target.value })\r\n        }\r\n    }\r\n\r\n    handleCrate() {\r\n\r\n        console.log(this.state)\r\n\r\n        this.setState({ event_creator: 2 })\r\n        fetch('http://localhost:8080/events/', {\r\n            method: 'POST',\r\n            headers: {\r\n                'authorization': localStorage.getItem(\"token\"),\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state)\r\n        }).then(res => {\r\n            console.log(res.json())\r\n        })\r\n    }\r\n\r\n    redirect(red) {\r\n        if (red) {\r\n            return <Redirect to=\"/events\" />\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.redirect(false)}\r\n                <Row>\r\n                    <Col xs={1}></Col>\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formName\">\r\n                                    <Form.Label>Event name</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter name\" onChange={this.onNameChange} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formCategory\">\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control as=\"select\" defaultValue=\"Choose...\" onChange={this.onCategoryChange}>\r\n                                        <option>Choose...</option>\r\n                                        <option>Conferencia</option>\r\n                                        <option>Seminario</option>\r\n                                        <option>Congreso</option>\r\n                                        <option>Curso</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                            </Form.Row>\r\n\r\n                            <Form.Group controlId=\"formthumbnail\">\r\n                                <Form.Label>Thumbnail link</Form.Label>\r\n                                <Form.Control onChange={this.onThumbChange} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formPlace\">\r\n                                <Form.Label>Place</Form.Label>\r\n                                <Form.Control placeholder=\"Bar Blackcat\" onChange={this.onPlaceChange} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formAddress\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control placeholder=\"str 123\" onChange={this.onAddressChange} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"InitDate\">\r\n                                    <Form.Label>Initial Date</Form.Label>\r\n                                    <Form.Control onChange={this.onIDateChange} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"finalDate\">\r\n                                    <Form.Label>Final Date</Form.Label>\r\n                                    <Form.Control onChange={this.onFDateChange} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Group controlId=\"formVirtual\">\r\n                                <Form.Check type=\"checkbox\" label=\"Virtual\" onChange={this.onVirtualChange} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"button\" onClick={this.handleCrate} href=\"/events\" style={{marginRight: \"10px\"}}>\r\n                                Create\r\n                            </Button>\r\n\r\n                            <Button variant=\"danger\" type=\"button\" href=\"/events\">\r\n                                Cancel\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col xs={1}></Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Col, Form, Row, Button } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nexport default class eventEdit extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            event_name: \"\",\r\n            event_category: \"\",\r\n            event_place: \"\",\r\n            event_address: \"\",\r\n            event_initial_date: \"\",\r\n            event_final_date: \"\",\r\n            event_type: true,\r\n            thumbnail: null,\r\n            event_creator: 1\r\n\r\n        }\r\n        this.onNameChange = this.onNameChange.bind(this)\r\n        this.onCategoryChange = this.onCategoryChange.bind(this)\r\n        this.onPlaceChange = this.onPlaceChange.bind(this)\r\n        this.onAddressChange = this.onAddressChange.bind(this)\r\n        this.onIDateChange = this.onIDateChange.bind(this)\r\n        this.onFDateChange = this.onFDateChange.bind(this)\r\n        this.onVirtualChange = this.onVirtualChange.bind(this)\r\n        this.onThumbChange = this.onThumbChange.bind(this)\r\n        this.handleCrate = this.handleCrate.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('http://localhost:8080/events/' + this.props.match.params.id, {\r\n            method: 'GET',\r\n            headers: {\r\n                'authorization': localStorage.getItem(\"token\"),\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }).then(res => {\r\n            return res.json()\r\n        }).then(data => {\r\n\r\n            this.setState({ event_name: data.event_name })\r\n            this.setState({ event_category: data.event_category })\r\n            this.setState({ event_place: data.event_place })\r\n            this.setState({ event_address: data.event_address })\r\n            this.setState({ event_initial_date: data.event_initial_date })\r\n            this.setState({ event_final_date: data.event_final_date })\r\n            this.setState({ event_type: data.event_type })\r\n            this.setState({ thumbnail: data.thumbnail })\r\n            this.setState({ event_creator: data.event_creator })\r\n        })\r\n    }\r\n\r\n    onNameChange(e) {\r\n        this.setState({ event_name: e.target.value })\r\n    }\r\n\r\n    onCategoryChange(e) {\r\n        this.setState({ event_category: e.target.value })\r\n    }\r\n\r\n    onPlaceChange(e) {\r\n        this.setState({ event_place: e.target.value })\r\n    }\r\n\r\n    onAddressChange(e) {\r\n        this.setState({ event_address: e.target.value })\r\n    }\r\n\r\n    onIDateChange(e) {\r\n        this.setState({ event_initial_date: e.target.value })\r\n    }\r\n\r\n    onFDateChange(e) {\r\n        this.setState({ event_final_date: e.target.value })\r\n    }\r\n\r\n    onVirtualChange(e) {\r\n        if (e.target.value === \"on\") {\r\n            this.setState({ event_type: true })\r\n        }\r\n        else {\r\n            this.setState({ event_type: false })\r\n        }\r\n\r\n    }\r\n\r\n    onThumbChange(e) {\r\n        if (e.target.value !== \"\") {\r\n            this.setState({ thumbnail: e.target.value })\r\n        }\r\n    }\r\n\r\n    handleCrate() {\r\n\r\n        console.log(this.state)\r\n\r\n        this.setState({ event_creator: 2 })\r\n        fetch('http://localhost:8080/events/' + this.props.match.params.id, {\r\n            method: 'PUT',\r\n            headers: {\r\n                'authorization': localStorage.getItem(\"token\"),\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(this.state)\r\n        }).then(res => {\r\n            console.log(res.json())\r\n        })\r\n    }\r\n\r\n    redirect(red) {\r\n        if (red) {\r\n            return <Redirect to=\"/events\" />\r\n        } else {\r\n            return <div></div>\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.redirect(false)}\r\n                <Row>\r\n                    <Col xs={1}></Col>\r\n                    <Col>\r\n                        <Form>\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"formName\">\r\n                                    <Form.Label>Event name</Form.Label>\r\n                                    <Form.Control type=\"email\" placeholder=\"Enter name\" onChange={this.onNameChange} defaultValue={this.state.event_name} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"formCategory\">\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control as=\"select\" onChange={this.onCategoryChange} >\r\n                                        {console.log(this.state.event_category)}\r\n                                        <option>Choose...</option>\r\n                                        <option>Conferencia</option>\r\n                                        <option>Seminario</option>\r\n                                        <option>Congreso</option>\r\n                                        <option>Curso</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n\r\n                            </Form.Row>\r\n\r\n                            <Form.Group controlId=\"formthumbnail\">\r\n                                <Form.Label>Thumbnail link</Form.Label>\r\n                                <Form.Control onChange={this.onThumbChange} defaultValue={this.state.thumbnail} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formPlace\">\r\n                                <Form.Label>Place</Form.Label>\r\n                                <Form.Control defaultValue={this.state.event_place} onChange={this.onPlaceChange} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"formAddress\">\r\n                                <Form.Label>Address</Form.Label>\r\n                                <Form.Control placeholder=\"str 123\" onChange={this.onAddressChange} defaultValue={this.state.event_address} />\r\n                            </Form.Group>\r\n\r\n                            <Form.Row>\r\n                                <Form.Group as={Col} controlId=\"InitDate\">\r\n                                    <Form.Label>Initial Date</Form.Label>\r\n                                    <Form.Control onChange={this.onIDateChange} defaultValue={this.state.event_initial_date} />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group as={Col} controlId=\"finalDate\">\r\n                                    <Form.Label>Final Date</Form.Label>\r\n                                    <Form.Control onChange={this.onFDateChange} defaultValue={this.state.event_final_date} />\r\n                                </Form.Group>\r\n                            </Form.Row>\r\n\r\n                            <Form.Group controlId=\"formVirtual\">\r\n                                <Form.Check type=\"checkbox\" label=\"Virtual\" onChange={this.onVirtualChange} defaultChecked={this.state.event_type} />\r\n                            </Form.Group>\r\n\r\n                            <Button variant=\"primary\" type=\"button\" href=\"/events\" onClick={this.handleCrate} style={{ marginRight: \"10px\" }}>\r\n                                Update\r\n                            </Button>\r\n\r\n                            <Button variant=\"danger\" type=\"button\" href=\"/events\">\r\n                                Cancel\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col xs={1}></Col>\r\n                </Row>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport Home from './components/home'\nimport EventList from './components/eventList'\nimport Event from './components/event'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport Register from './components/register'\nimport CreateEvent from './components/createEvent'\nimport EventEdit from './components/eventEdit'\n\nfunction App() {\n  return (\n    <div>\n      <br />\n      <h1 style={{ textAlign: \"center\" }}>Welcome to event App</h1>\n      <br />\n      <Router>\n        <Route path=\"/\" exact component={Home} />\n        <Route path=\"/events/detail/:id\" exact component={Event} />\n        <Route path=\"/events/create\" exact component={CreateEvent} />\n        <Route path=\"/events\" exact component={EventList} />\n        <Route path=\"/register\" component={Register} />\n        <Route path=\"/events/edit/:id\" component={EventEdit} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}